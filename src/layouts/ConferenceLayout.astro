---
import type { CollectionEntry } from "astro:content";
import BaseLayout from "./BaseLayout.astro";
import dayjs from "dayjs";
import localizedFormat from "dayjs/plugin/localizedFormat";

interface Props {
  entry: CollectionEntry<'conferences'>,
}

const { entry } = Astro.props;
const {
  title,
  description,
  eventDate,
  updatedDate,
  heroImage,
  conference,
  tags = [],
  categories = [],
  speakers = [],
} = entry.data;

const { Content, headings } = await entry.render();

dayjs.extend(localizedFormat);
const displayDate = dayjs(eventDate).format("lll");
import { Image } from "astro:assets";
import createSlug from "src/lib/createSlug";
import TableOfContents from "src/lib/TableOfContents.astro";
---

<BaseLayout title={title} description={description} image={heroImage}, ogType="article">
  <main class="md:flex md:justify-center" data-pagefind-body>
    <article class="prose prose-lg max-w-[1280px] prose-img:mx-auto">
      {
        heroImage && (
          <Image
            width={750}
            height={422}
            format="webp"
            src={heroImage}
            alt={title}
            class="w-full mb-6"
          />
        )
      }
      <h1 class="title my-2 text-4xl font-bold">{title}</h1>
     {eventDate && <span>
      <svg class="inline-block -mt-0.5 dark:text-gray-400 h-4 w-4" data-icon="tabler:clock" height="1em" viewBox="0 0 24 24" width="1em"><symbol id="ai:tabler:clock"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><path d="M3 12a9 9 0 1 0 18 0a9 9 0 0 0-18 0"></path><path d="M12 7v5l3 3"></path></g></symbol><use xlink:href="#ai:tabler:clock"></use></svg> 
      <time>{displayDate}</time>}
    </span>
      <br />
      <div>
        {conference && <a class="badge badge-secondary rounded-full no-underline"
          href={`/conferences/conf/${createSlug(conference, conference)}`}>{conference}</a>}
        {speakers && speakers.length > 0 && <span>
          <svg class="inline-block -mt-0.5 dark:text-gray-400 h-4 w-4" data-icon="tabler:user" height="1em" viewBox="0 0 24 24" width="1em"><symbol id="ai:tabler:user"><path d="M8 7a4 4 0 1 0 8 0a4 4 0 0 0-8 0M6 21v-2a4 4 0 0 1 4-4h4a4 4 0 0 1 4 4v2" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"></path></symbol><use xlink:href="#ai:tabler:user"></use></svg>
            {speakers.map(speaker => {
              const speakerSlug = createSlug(speaker, speaker);
              return <a href={`/conferences/speaker/${speakerSlug}`}
                class="mr-3 no-underline"
              >{speaker}</a>
          })} 
            {/* {speakers.join(' Â· ')}  */}
          </span>}
      </div>
      {
        tags &&
          tags.map((tag) => (
            <a
              href={`/conferences/tag/${tag}`}
              class="badge badge-outline rounded-full ml-2 no-underline"
            >
              {tag}
            </a>
          ))
      }
      <div class="divider my-2"></div>

      <div class="toc-wrapper">
        <TableOfContents headings={headings}/>
        <div class="content">
          <Content />
        </div>
      </div>
    </article>
  </main>
</BaseLayout>
